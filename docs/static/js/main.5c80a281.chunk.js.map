{"version":3,"sources":["utils/index.js","components/Contract/index.js","components/Datos/index.js","components/Cuenta/index.js","components/TronLinkGuide/index.js","components/App/index.js","index.js","components/TronLinkGuide/TronLinkLogo.png"],"names":["utils","tronWeb","contract","setTronWeb","this","setContract","contractAddress","at","DatosBlockchain","props","state","kwproducidos","contadoresactivos","certificados","estado","bind","Utils","window","setInterval","setstate","call","esto","setState","parseInt","_hex","className","data-scroll","Component","consulta","nuevaConsulta","certificado","totalInvestors","cuenta","Meses","totalInvested","totalRefRewards","options","title","display","text","fontSize","legend","position","scales","yAxes","ticks","beginAtZero","data","cambiarDatos","irCertificado","trx","getAccount","direccion","address","fromHex","cargo","consumo","meses","0","1","2","3","4","5","6","7","8","9","10","11","cert","mes1","mes","split","mes2","mes3","mes4","mes5","mes6","datos","labels","datasets","label","backgroundColor","borderColor","borderWidth","document","getElementById","value","activa","cuentaActiva","console","log","res","id","href","onClick","for","type","placeholder","WEBSTORE_URL","logo","src","TronLinkLogo","alt","openTronLink","open","TronLinkGuide","installed","target","rel","App","loggedIn","Promise","resolve","tronWebState","ready","tries","timer","TronWeb","clearInterval","defaultAddress","hex","toHex","base58","on","root","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.5c80a281.chunk.js","sourcesContent":["const utils = {\r\n  tronWeb: false,\r\n  contract: false,\r\n\r\n  setTronWeb(tronWeb) {\r\n    this.tronWeb = tronWeb;\r\n  },\r\n\r\n  async setContract(tronWeb, contractAddress) {\r\n    this.contract = await tronWeb.contract().at(contractAddress);\r\n  }\r\n};\r\n\r\nexport default utils;\r\n","\r\n/// La direccion de su contrato acÃ¡ ///////////////////////////////////\r\nconst contractAddress = \"TTuKWj5YumQDMGxpbmSWc3EbPNCkayGXJT\";\r\nexport default contractAddress;","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class DatosBlockchain extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      kwproducidos: 0,\r\n      contadoresactivos: 0,\r\n      certificados: 0\r\n    };\r\n\r\n    this.estado = this.estado.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    setInterval(() => this.estado(),1000);\r\n  };\r\n\r\n  async estado() {\r\n\r\n    let esto = await Utils.contract.setstate().call();\r\n    //console.log(esto);\r\n    \r\n    this.setState({\r\n      kwproducidos: parseInt(esto[2]._hex),\r\n      contadoresactivos: parseInt(esto[0]._hex),\r\n      certificados: parseInt(esto[1]._hex)\r\n\r\n    });\r\n\r\n  };\r\n\r\n  render() {\r\n    const { kwproducidos, contadoresactivos, certificados } = this.state;\r\n\r\n    return (\r\n      <div className=\"section cl\">\r\n        <div className=\"container\">\r\n          <div className=\"row text-left stat-wrap\">\r\n            <div className=\"col-md-4 col-sm-4 col-xs-12\">\r\n              <span data-scroll className=\"global-radius icon_wrap effect-1 alignleft\"><i className=\"flaticon-hosting\"></i></span>\r\n              <p className=\"stat_count\">{kwproducidos}</p>\r\n              <h3>KW Producidos</h3>\r\n            </div>\r\n\r\n            <div className=\"col-md-4 col-sm-4 col-xs-12\">\r\n              <span data-scroll className=\"global-radius icon_wrap effect-1 alignleft\"><i className=\"flaticon-domain-registration\"></i></span>\r\n              <p className=\"stat_count\">{contadoresactivos}</p>\r\n              <h3>Contadores Activos</h3>\r\n            </div>\r\n\r\n            <div className=\"col-md-4 col-sm-4 col-xs-12\">\r\n              <span data-scroll className=\"global-radius icon_wrap effect-1 alignleft\"><i className=\"flaticon-mail\"></i></span>\r\n              <p className=\"stat_count\">{certificados}</p>\r\n              <h3>Certificados emitidos</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Bar } from 'react-chartjs-2'\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class DatosBlockchain extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.consulta = this.consulta.bind(this);\r\n    this.nuevaConsulta = this.nuevaConsulta.bind(this);\r\n\r\n    this.state = {\r\n      consulta: false,\r\n      certificado: \"certificado.html\",\r\n      totalInvestors: 0,\r\n      cuenta: 0,\r\n      Meses:{},\r\n      totalInvested: 0,\r\n      totalRefRewards: 0,\r\n      options: {\r\n        title:{\r\n          display: true,\r\n          text:'Mis consumos KW/h',\r\n          fontSize: 25\r\n        },\r\n        legend:{\r\n          display: false,\r\n          position: 'rigth'\r\n        },\r\n        scales: {\r\n          yAxes: [\r\n            {\r\n              ticks: {\r\n                beginAtZero: true,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      },\r\n      data:{}\r\n    };\r\n\r\n    this.cambiarDatos = this.cambiarDatos.bind(this);\r\n    this.irCertificado = this.irCertificado.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress); \r\n\r\n  };\r\n\r\n  async irCertificado() {\r\n\r\n    const {cuenta } = this.state;\r\n\r\n    //datos BC\r\n    var direccion = await window.tronWeb.trx.getAccount();\r\n\r\n    if (await window.tronWeb.trx.getAccount()) {\r\n      direccion = window.tronWeb.address.fromHex(direccion.address);\r\n      direccion = \"&direccion=\"+direccion;\r\n\r\n      var cargo =\"\";\r\n\r\n      if (true) {\r\n        cargo = \"Admin\";\r\n        cargo = \"&cargo=\"+cargo;\r\n      }else{\r\n        cargo = \"\";\r\n      }\r\n\r\n      \r\n    }else{\r\n      direccion = \"\";\r\n      cargo = \"\";\r\n    }\r\n\r\n    var consumo = \"\";\r\n\r\n    if (true) {\r\n      consumo = 1270;\r\n      consumo = \"&consumo=\"+consumo;\r\n    }else{\r\n      consumo = \"\";\r\n    }\r\n\r\n    if (true) {\r\n\r\n      var meses = {\r\n        0:\"Octubre\"+\".\"+\"177\"+\".\"+\"185378001\",\r\n        1:\"Septiembre\"+\".\"+\"79\"+\".\"+\"185378002\",\r\n        2:\"Agosto\"+\".\"+\"164\"+\".\"+\"185378003\",\r\n        3:\"Julio\"+\".\"+\"167\"+\".\"+\"185378004\",\r\n        4:\"Junio\"+\".\"+\"222\"+\".\"+\"185378005\",\r\n        5:\"Mayo\"+\".\"+\"209\"+\".\"+\"185378006\",\r\n        6:\"Abril\"+\".\"+\"201\"+\".\"+\"185378007\",\r\n        7:\"Marzo\"+\".\"+\"180\"+\".\"+\"185378008\",\r\n        8:\"Febrero\"+\".\"+\"234\"+\".\"+\"185378009\",\r\n        9:\"Enero\"+\".\"+\"184\"+\".\"+\"185378010\",\r\n        10:\"Diciembre\"+\".\"+\"269\"+\".\"+\"185378011\",\r\n        11:\"Noviembre\"+\".\"+\"149\"+\".\"+\"185378012\"\r\n\r\n      };\r\n\r\n    }else{\r\n\r\n    }\r\n\r\n    \r\n\r\n    this.setState({\r\n      Meses:  meses\r\n    });\r\n\r\n    var cert = \"certificado.html?cuenta=\"+cuenta+direccion+cargo+consumo+\"&mes1=\"+meses[0]+\"&mes2=\"+meses[1]+\"&mes3=\"+meses[2]+\"&mes4=\"+meses[3]+\"&mes5=\"+meses[4]+\"&mes6=\"+meses[5]+\"&mes7=\"+meses[6]+\"&mes8=\"+meses[7]+\"&mes9=\"+meses[8]+\"&mes10=\"+meses[9]+\"&mes11=\"+meses[10]+\"&mes12=\"+meses[11];\r\n    this.setState({\r\n      certificado: cert\r\n    });\r\n  };\r\n\r\n  async cambiarDatos() {\r\n    // llamar blockchain aca\r\n    await this.irCertificado();\r\n    const {Meses} = this.state;    \r\n\r\n    var mes = Meses;\r\n    var mes1 = mes[0].split('.');\r\n    var mes2 = mes[1].split('.');\r\n    var mes3 = mes[2].split('.');\r\n    var mes4 = mes[3].split('.');\r\n    var mes5 = mes[4].split('.');\r\n    var mes6 = mes[5].split('.');\r\n\r\n    let datos = [mes6[1], mes5[1], mes4[1], mes3[1], mes2[1], mes1[1]];\r\n    let meses = [mes6[0], mes5[0], mes4[0], mes3[0], mes2[0], mes1[0]];\r\n    //console.log(data);\r\n    this.setState({\r\n      data: {\r\n        labels: meses,\r\n        datasets: [\r\n          {\r\n            label: 'Consumo actual',\r\n            data: datos,\r\n            backgroundColor: [\r\n              'rgba(255, 99, 132, 0.2)',\r\n              'rgba(54, 162, 235, 0.2)',\r\n              'rgba(255, 206, 86, 0.2)',\r\n              'rgba(75, 192, 192, 0.2)',\r\n              'rgba(153, 102, 255, 0.2)',\r\n              'rgba(255, 159, 64, 0.2)',\r\n            ],\r\n            borderColor: [\r\n              'rgba(255, 99, 132, 1)',\r\n              'rgba(54, 162, 235, 1)',\r\n              'rgba(255, 206, 86, 1)',\r\n              'rgba(75, 192, 192, 1)',\r\n              'rgba(153, 102, 255, 1)',\r\n              'rgba(255, 159, 64, 1)',\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      }\r\n    });\r\n\r\n  };\r\n\r\n  async consulta() {\r\n\r\n    let cuenta = document.getElementById(\"cuenta\").value;\r\n\r\n    let activa = false;\r\n\r\n    activa = await Utils.contract.cuentaActiva(cuenta).call();\r\n    console.log(activa);\r\n    activa = activa.res;\r\n    \r\n    //comprobaciones \r\n    if (cuenta >= 1 && activa) {\r\n      this.setState({\r\n        consulta: true,\r\n        cuenta: cuenta\r\n      });\r\n\r\n      await this.cambiarDatos();\r\n      await this.irCertificado();\r\n    }\r\n    \r\n\r\n    //let x = 1;\r\n    //let cosas = Utils.contract.verConsumo(cuenta, x).call();\r\n  \r\n    //console.log(cosas);\r\n\r\n\r\n    \r\n  };\r\n\r\n  async nuevaConsulta() {\r\n    this.setState({\r\n      consulta: false,\r\n      cuenta: 0\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {data, options, certificado, consulta, cuenta } = this.state;\r\n\r\n    if(consulta) {\r\n      return (\r\n        <>\r\n        <div id=\"pricing\" className=\"section lb\">\r\n        <div className=\"container\">\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"tab-content\">\r\n                        <div className=\"tab-pane active fade show\" id=\"tab1\">\r\n                            <div className=\"row text-center\">\r\n                                <div className=\"col-md-4\">\r\n                                    <div className=\"pricing-table pricing-table-highlighted\">\r\n                                        <div className=\"pricing-table-header grd1\">\r\n                                            <h2>Consumo actual</h2>\r\n                                            <h3>lectura | 39.857</h3>\r\n                                        </div>\r\n                                        <div className=\"pricing-table-space\"></div>\r\n                                        <div className=\"pricing-table-features\">\r\n                                            <p><i className=\"fa fa-envelope-o\"></i> <strong>170 KW</strong> Este mes</p>\r\n                                            <p><i className=\"fa fa-rocket\"></i> <strong>5,66 KW</strong> cada dÃ­a</p>\r\n                                            <p><i className=\"fa fa-life-ring\"></i> <strong>0,236 KW</strong> cada hora</p>\r\n                                            <p><i className=\"fa fa-database\"></i> <strong>$73.100</strong> Valor Total</p>\r\n                                        </div>\r\n                                        <div className=\"pricing-table-sign-up\">\r\n                                          <hr></hr>\r\n                                            <a href=\"#pricing\" onClick={() => this.cambiarDatos()} className=\"hover-btn-new\"><span>Actualizar Datos</span></a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-8\">\r\n                                    <div className=\"pricing-table pricing-table-highlighted\">\r\n                                        <div className=\"pricing-table-header grd1\">\r\n                                            <h2>Cuenta NÂ°: <b>{cuenta}</b></h2>\r\n                                            <h2>Promedio Ãltimos 6 meses: <b>170</b></h2>\r\n                                        </div>\r\n                                        <div className=\"pricing-table-space\"></div>\r\n                                        <div className=\"pricing-table-features\">\r\n                                          <Bar data={data} options={options} />\r\n                                        </div>\r\n                                        <div className=\"pricing-table-sign-up\">\r\n                                            <a href={certificado}  onClick={() => this.irCertificado()} className=\"hover-btn-new\"><span>Ver Certificado</span></a>&nbsp;\r\n                                            <a href=\"#domain\" onClick={() => this.nuevaConsulta()} className=\"hover-btn-new\"><span>Nueva Consulta</span></a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n          \r\n        </>\r\n      )\r\n    }else{\r\n      return (\r\n\r\n      <>\r\n      \r\n        <div id=\"domain\" className=\"section wb\">\r\n          <div className=\"container\">\r\n              <div className=\"row text-center\">\r\n\r\n                  <div className=\"col-lg-12\">\r\n                      <form className=\"checkdomain form-inline\">\r\n                          <div className=\"checkdomain-wrapper\">\r\n                              <div className=\"form-group\">\r\n                              <h1>Escriba su nÃºmero de cuenta para consultar</h1>\r\n                                  <label className=\"sr-only\" for=\"domainnamehere\">NÃºmero de cuenta</label>\r\n                                  <input type=\"text\" className=\"form-control\" id=\"cuenta\" placeholder=\"123456789\"></input>\r\n                                  <button type=\"button\" className=\"btn btn-primary grd1\" onClick={() => this.consulta()}><i className=\"fa fa-search\"></i></button>\r\n                              </div>\r\n                              \r\n                          </div>\r\n                      </form>\r\n                  </div>\r\n\r\n                  <div className=\"col-lg-12\">\r\n                      <div className=\"customwidget text-center\">\r\n                          <p>Una base de datos centralizados puede ser atacada facilmente.</p>\r\n                          <p>La tecnologia BlockChain consta de varias copias de la misma base de datos, distribuidas al rededor del mundo, donde solo los administradores pueden realizar cambios, todos y cada uno de los movimientos queda registrado dentro le la blochchain y disponibles para audotoria publica o privada.</p>\r\n                          <ul className=\"list-inline\">\r\n                              <li><i className=\"fa fa-check\"></i> Disponibilidad 24/7 de la informaciÃ³n</li>\r\n                              <li><i className=\"fa fa-check\"></i> Alta escalabilidad para manejo de Datos</li>\r\n                          </ul>\r\n                      </div>\r\n                  </div>\r\n          \r\n                  \r\n                </div>\r\n            </div>\r\n        </div>\r\n      </>\r\n        \r\n\r\n\r\n\r\n      );;\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport TronLinkLogo from './TronLinkLogo.png';\r\n\r\n\r\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\r\n\r\nconst logo = (\r\n    <div className='logo col-xs-12 col-md-4 text-center'>\r\n        <img src={ TronLinkLogo } className=\"img-fluid\" alt='TronLink logo' />\r\n    </div>\r\n);\r\n\r\nconst openTronLink = () => {\r\n    window.open(WEBSTORE_URL, '_blank');\r\n};\r\n\r\nconst TronLinkGuide = props => {const {installed = false} = props;\r\n\r\n    if(!installed) {\r\n        return (\r\n        <div className=\"container\">\r\n            <div className='row mt-4' onClick={ openTronLink }>\r\n                <div className='col-xs-12 col-md-8'>\r\n                    <h1>Se necesita TronLink</h1>\r\n                    <p>\r\n                        Para consultar su medidor debe tener instalado TronLink. TronLink es una billetera TRON para el navegador, puede usarlar <a href={ WEBSTORE_URL } target='_blank' rel='noopener noreferrer'>installed from the Chrome Webstore</a>.\r\n                        una vez instalada, regrese y recarge la pagina.\r\n                    </p>\r\n                </div>\r\n                { logo }\r\n            </div>\r\n        </div>\r\n        );\r\n    }else{\r\n\r\n    return (\r\n    <div className=\"container\">\r\n        <div className='row mt-4' onClick={ openTronLink }>\r\n            <div className='col-xs-12 col-md-8'>\r\n                <h1>Inicie SesiÃ³n</h1>\r\n                <p>\r\n                    TronLink esta instalado pero no ha iniciado sesion. Abra TronLink en la barra del navegador y configure su primer billetera o restaure una billetera ya creada.\r\n                </p>\r\n            </div>\r\n            { logo }\r\n        </div>\r\n    </div>\r\n    );}\r\n};\r\n\r\nexport default TronLinkGuide;","import React, { Component } from \"react\";\r\n\r\nimport TronWeb from \"tronweb\";\r\nimport Utils from \"../../utils\";\r\n\r\nimport Datos from \"../Datos\";\r\nimport Cuenta from \"../Cuenta\";\r\nimport TronLinkGuide from \"../TronLinkGuide\";\r\n\r\n\r\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tronWeb: {\r\n        installed: false,\r\n        loggedIn: false\r\n      }\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n\r\n\r\n    await new Promise(resolve => {\r\n      const tronWebState = {\r\n        installed: !!window.tronWeb,\r\n        loggedIn: window.tronWeb && window.tronWeb.ready\r\n      };\r\n\r\n      if (tronWebState.installed) {\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        return resolve();\r\n      }\r\n\r\n      let tries = 0;\r\n\r\n      const timer = setInterval(() => {\r\n        if (tries >= 10) {\r\n          const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n          window.tronWeb = new TronWeb(\r\n            TRONGRID_API,\r\n            TRONGRID_API,\r\n            TRONGRID_API\r\n          );\r\n\r\n          this.setState({\r\n            tronWeb: {\r\n              installed: false,\r\n              loggedIn: false\r\n            }\r\n          });\r\n          clearInterval(timer);\r\n          return resolve();\r\n        }\r\n\r\n        tronWebState.installed = !!window.tronWeb;\r\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n        if (!tronWebState.installed) {\r\n          return tries++;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        resolve();\r\n      }, 100);\r\n    });\r\n\r\n    if (!this.state.tronWeb.loggedIn) {\r\n      // Set default address (foundation address) used for contract calls\r\n      // Directly overwrites the address object if TronLink disabled the\r\n      // function call\r\n      window.tronWeb.defaultAddress = {\r\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\r\n        base58: FOUNDATION_ADDRESS\r\n      };\r\n\r\n      window.tronWeb.on(\"addressChange\", () => {\r\n        if (this.state.tronWeb.loggedIn) {\r\n          return;\r\n        }\r\n        \r\n        this.setState({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    Utils.setTronWeb(window.tronWeb);\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.tronWeb.installed) return <><TronLinkGuide /></>;\r\n\r\n    if (!this.state.tronWeb.loggedIn) return <><Datos /><TronLinkGuide installed /></>;\r\n\r\n    return (\r\n      <div>\r\n        <Datos />\r\n        \r\n        <Cuenta consulta/> \r\n          \r\n      </div>\r\n      \r\n\r\n\r\n      );\r\n\r\n  }\r\n}\r\nexport default App;\r\n\r\n// {tWeb()}\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\n\r\nvar root = document.getElementById(\"root\");\r\n\r\n\r\nReactDOM.render(<App />, root);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.d3a8f115.png\";"],"sourceRoot":""}